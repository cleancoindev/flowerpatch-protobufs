/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.protobuf.Flower', null, global);
goog.exportSymbol('proto.protobuf.Flower.Stats', null, global);
goog.exportSymbol('proto.protobuf.Flower.Stats.BaseNugType', null, global);
goog.exportSymbol('proto.protobuf.Flower.Stats.BodyType', null, global);
goog.exportSymbol('proto.protobuf.Flower.Stats.IdleAnimation', null, global);
goog.exportSymbol('proto.protobuf.Flower.Stats.LandAffinity', null, global);
goog.exportSymbol('proto.protobuf.Flower.Stats.LandVariant', null, global);
goog.exportSymbol('proto.protobuf.Flower.Stats.MainLeafType', null, global);
goog.exportSymbol('proto.protobuf.Flower.Stats.NugLeafType', null, global);
goog.exportSymbol('proto.protobuf.Flower.Stats.ParticleAlgorithm', null, global);
goog.exportSymbol('proto.protobuf.Flower.Stats.PowderType', null, global);
goog.exportSymbol('proto.protobuf.Flower.Stats.Set', null, global);
goog.exportSymbol('proto.protobuf.Flower.Stats.SkeletonType', null, global);
goog.exportSymbol('proto.protobuf.Flower.Stats.Smell', null, global);
goog.exportSymbol('proto.protobuf.Flower.Stats.StemType', null, global);
goog.exportSymbol('proto.protobuf.Flower.Version', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.Flower = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf.Flower, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protobuf.Flower.displayName = 'proto.protobuf.Flower';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf.Flower.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf.Flower.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf.Flower} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.Flower.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    version: jspb.Message.getFieldWithDefault(msg, 2, 0),
    descriptionId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    uniqueId: jspb.Message.getFieldWithDefault(msg, 4, 0),
    storeDbId: jspb.Message.getFieldWithDefault(msg, 5, 0),
    parentOneId: jspb.Message.getFieldWithDefault(msg, 6, 0),
    parentTwoId: jspb.Message.getFieldWithDefault(msg, 7, 0),
    createdAfterBlock: jspb.Message.getFieldWithDefault(msg, 8, 0),
    stats: (f = msg.getStats()) && proto.protobuf.Flower.Stats.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.Flower}
 */
proto.protobuf.Flower.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.Flower;
  return proto.protobuf.Flower.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.Flower} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.Flower}
 */
proto.protobuf.Flower.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {!proto.protobuf.Flower.Version} */ (reader.readEnum());
      msg.setVersion(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDescriptionId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUniqueId(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStoreDbId(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setParentOneId(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setParentTwoId(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatedAfterBlock(value);
      break;
    case 15:
      var value = new proto.protobuf.Flower.Stats;
      reader.readMessage(value,proto.protobuf.Flower.Stats.deserializeBinaryFromReader);
      msg.setStats(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.Flower.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.Flower.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.Flower} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.Flower.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getVersion();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getDescriptionId();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getUniqueId();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getStoreDbId();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getParentOneId();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getParentTwoId();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getCreatedAfterBlock();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getStats();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.protobuf.Flower.Stats.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.protobuf.Flower.Version = {
  VERSION_ONE: 0
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.Flower.Stats = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 500, null, null);
};
goog.inherits(proto.protobuf.Flower.Stats, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protobuf.Flower.Stats.displayName = 'proto.protobuf.Flower.Stats';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf.Flower.Stats.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf.Flower.Stats.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf.Flower.Stats} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.Flower.Stats.toObject = function(includeInstance, msg) {
  var f, obj = {
    mutability: jspb.Message.getFieldWithDefault(msg, 100, 0),
    growthSpeed: jspb.Message.getFieldWithDefault(msg, 101, 0),
    harvestSize: jspb.Message.getFieldWithDefault(msg, 102, 0),
    harvestSpread: jspb.Message.getFieldWithDefault(msg, 103, 0),
    seedDrop: jspb.Message.getFieldWithDefault(msg, 200, 0),
    berryDrop: jspb.Message.getFieldWithDefault(msg, 201, 0),
    flowerDrop: jspb.Message.getFieldWithDefault(msg, 202, 0),
    nugDrop: jspb.Message.getFieldWithDefault(msg, 203, 0),
    height: jspb.Message.getFieldWithDefault(msg, 300, 0),
    thc: jspb.Message.getFieldWithDefault(msg, 301, 0),
    cbd: jspb.Message.getFieldWithDefault(msg, 302, 0),
    smellPrimaryStrength: jspb.Message.getFieldWithDefault(msg, 303, 0),
    smellSecondaryStrength: jspb.Message.getFieldWithDefault(msg, 304, 0),
    baseNugScale: jspb.Message.getFieldWithDefault(msg, 305, 0),
    mainLeafScale: jspb.Message.getFieldWithDefault(msg, 306, 0),
    nugLeafScale: jspb.Message.getFieldWithDefault(msg, 307, 0),
    stemScale: jspb.Message.getFieldWithDefault(msg, 308, 0),
    baseNugColor: jspb.Message.getFieldWithDefault(msg, 400, ""),
    leafColor: jspb.Message.getFieldWithDefault(msg, 401, ""),
    stemColor: jspb.Message.getFieldWithDefault(msg, 402, ""),
    powderColor: jspb.Message.getFieldWithDefault(msg, 403, ""),
    skeletonType: jspb.Message.getFieldWithDefault(msg, 500, 0),
    baseNugType: jspb.Message.getFieldWithDefault(msg, 501, 0),
    powderType: jspb.Message.getFieldWithDefault(msg, 502, 0),
    stemType: jspb.Message.getFieldWithDefault(msg, 503, 0),
    mainLeafType: jspb.Message.getFieldWithDefault(msg, 504, 0),
    nugLeafType: jspb.Message.getFieldWithDefault(msg, 505, 0),
    bodyType: jspb.Message.getFieldWithDefault(msg, 506, 0),
    set: jspb.Message.getFieldWithDefault(msg, 600, 0),
    landAffinity: jspb.Message.getFieldWithDefault(msg, 601, 0),
    landVariant: jspb.Message.getFieldWithDefault(msg, 602, 0),
    idleAnimation: jspb.Message.getFieldWithDefault(msg, 603, 0),
    particleAlgorithm: jspb.Message.getFieldWithDefault(msg, 604, 0),
    smellPrimary: jspb.Message.getFieldWithDefault(msg, 605, 0),
    smellSecondary: jspb.Message.getFieldWithDefault(msg, 606, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.Flower.Stats}
 */
proto.protobuf.Flower.Stats.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.Flower.Stats;
  return proto.protobuf.Flower.Stats.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.Flower.Stats} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.Flower.Stats}
 */
proto.protobuf.Flower.Stats.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 100:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMutability(value);
      break;
    case 101:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGrowthSpeed(value);
      break;
    case 102:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHarvestSize(value);
      break;
    case 103:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHarvestSpread(value);
      break;
    case 200:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSeedDrop(value);
      break;
    case 201:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBerryDrop(value);
      break;
    case 202:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFlowerDrop(value);
      break;
    case 203:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNugDrop(value);
      break;
    case 300:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHeight(value);
      break;
    case 301:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setThc(value);
      break;
    case 302:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCbd(value);
      break;
    case 303:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSmellPrimaryStrength(value);
      break;
    case 304:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSmellSecondaryStrength(value);
      break;
    case 305:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBaseNugScale(value);
      break;
    case 306:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMainLeafScale(value);
      break;
    case 307:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNugLeafScale(value);
      break;
    case 308:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStemScale(value);
      break;
    case 400:
      var value = /** @type {string} */ (reader.readString());
      msg.setBaseNugColor(value);
      break;
    case 401:
      var value = /** @type {string} */ (reader.readString());
      msg.setLeafColor(value);
      break;
    case 402:
      var value = /** @type {string} */ (reader.readString());
      msg.setStemColor(value);
      break;
    case 403:
      var value = /** @type {string} */ (reader.readString());
      msg.setPowderColor(value);
      break;
    case 500:
      var value = /** @type {!proto.protobuf.Flower.Stats.SkeletonType} */ (reader.readEnum());
      msg.setSkeletonType(value);
      break;
    case 501:
      var value = /** @type {!proto.protobuf.Flower.Stats.BaseNugType} */ (reader.readEnum());
      msg.setBaseNugType(value);
      break;
    case 502:
      var value = /** @type {!proto.protobuf.Flower.Stats.PowderType} */ (reader.readEnum());
      msg.setPowderType(value);
      break;
    case 503:
      var value = /** @type {!proto.protobuf.Flower.Stats.StemType} */ (reader.readEnum());
      msg.setStemType(value);
      break;
    case 504:
      var value = /** @type {!proto.protobuf.Flower.Stats.MainLeafType} */ (reader.readEnum());
      msg.setMainLeafType(value);
      break;
    case 505:
      var value = /** @type {!proto.protobuf.Flower.Stats.NugLeafType} */ (reader.readEnum());
      msg.setNugLeafType(value);
      break;
    case 506:
      var value = /** @type {!proto.protobuf.Flower.Stats.BodyType} */ (reader.readEnum());
      msg.setBodyType(value);
      break;
    case 600:
      var value = /** @type {!proto.protobuf.Flower.Stats.Set} */ (reader.readEnum());
      msg.setSet(value);
      break;
    case 601:
      var value = /** @type {!proto.protobuf.Flower.Stats.LandAffinity} */ (reader.readEnum());
      msg.setLandAffinity(value);
      break;
    case 602:
      var value = /** @type {!proto.protobuf.Flower.Stats.LandVariant} */ (reader.readEnum());
      msg.setLandVariant(value);
      break;
    case 603:
      var value = /** @type {!proto.protobuf.Flower.Stats.IdleAnimation} */ (reader.readEnum());
      msg.setIdleAnimation(value);
      break;
    case 604:
      var value = /** @type {!proto.protobuf.Flower.Stats.ParticleAlgorithm} */ (reader.readEnum());
      msg.setParticleAlgorithm(value);
      break;
    case 605:
      var value = /** @type {!proto.protobuf.Flower.Stats.Smell} */ (reader.readEnum());
      msg.setSmellPrimary(value);
      break;
    case 606:
      var value = /** @type {!proto.protobuf.Flower.Stats.Smell} */ (reader.readEnum());
      msg.setSmellSecondary(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.Flower.Stats.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.Flower.Stats.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.Flower.Stats} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.Flower.Stats.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMutability();
  if (f !== 0) {
    writer.writeInt32(
      100,
      f
    );
  }
  f = message.getGrowthSpeed();
  if (f !== 0) {
    writer.writeInt32(
      101,
      f
    );
  }
  f = message.getHarvestSize();
  if (f !== 0) {
    writer.writeInt32(
      102,
      f
    );
  }
  f = message.getHarvestSpread();
  if (f !== 0) {
    writer.writeInt32(
      103,
      f
    );
  }
  f = message.getSeedDrop();
  if (f !== 0) {
    writer.writeInt32(
      200,
      f
    );
  }
  f = message.getBerryDrop();
  if (f !== 0) {
    writer.writeInt32(
      201,
      f
    );
  }
  f = message.getFlowerDrop();
  if (f !== 0) {
    writer.writeInt32(
      202,
      f
    );
  }
  f = message.getNugDrop();
  if (f !== 0) {
    writer.writeInt32(
      203,
      f
    );
  }
  f = message.getHeight();
  if (f !== 0) {
    writer.writeInt32(
      300,
      f
    );
  }
  f = message.getThc();
  if (f !== 0) {
    writer.writeInt32(
      301,
      f
    );
  }
  f = message.getCbd();
  if (f !== 0) {
    writer.writeInt32(
      302,
      f
    );
  }
  f = message.getSmellPrimaryStrength();
  if (f !== 0) {
    writer.writeInt32(
      303,
      f
    );
  }
  f = message.getSmellSecondaryStrength();
  if (f !== 0) {
    writer.writeInt32(
      304,
      f
    );
  }
  f = message.getBaseNugScale();
  if (f !== 0) {
    writer.writeInt32(
      305,
      f
    );
  }
  f = message.getMainLeafScale();
  if (f !== 0) {
    writer.writeInt32(
      306,
      f
    );
  }
  f = message.getNugLeafScale();
  if (f !== 0) {
    writer.writeInt32(
      307,
      f
    );
  }
  f = message.getStemScale();
  if (f !== 0) {
    writer.writeInt32(
      308,
      f
    );
  }
  f = message.getBaseNugColor();
  if (f.length > 0) {
    writer.writeString(
      400,
      f
    );
  }
  f = message.getLeafColor();
  if (f.length > 0) {
    writer.writeString(
      401,
      f
    );
  }
  f = message.getStemColor();
  if (f.length > 0) {
    writer.writeString(
      402,
      f
    );
  }
  f = message.getPowderColor();
  if (f.length > 0) {
    writer.writeString(
      403,
      f
    );
  }
  f = message.getSkeletonType();
  if (f !== 0.0) {
    writer.writeEnum(
      500,
      f
    );
  }
  f = message.getBaseNugType();
  if (f !== 0.0) {
    writer.writeEnum(
      501,
      f
    );
  }
  f = message.getPowderType();
  if (f !== 0.0) {
    writer.writeEnum(
      502,
      f
    );
  }
  f = message.getStemType();
  if (f !== 0.0) {
    writer.writeEnum(
      503,
      f
    );
  }
  f = message.getMainLeafType();
  if (f !== 0.0) {
    writer.writeEnum(
      504,
      f
    );
  }
  f = message.getNugLeafType();
  if (f !== 0.0) {
    writer.writeEnum(
      505,
      f
    );
  }
  f = message.getBodyType();
  if (f !== 0.0) {
    writer.writeEnum(
      506,
      f
    );
  }
  f = message.getSet();
  if (f !== 0.0) {
    writer.writeEnum(
      600,
      f
    );
  }
  f = message.getLandAffinity();
  if (f !== 0.0) {
    writer.writeEnum(
      601,
      f
    );
  }
  f = message.getLandVariant();
  if (f !== 0.0) {
    writer.writeEnum(
      602,
      f
    );
  }
  f = message.getIdleAnimation();
  if (f !== 0.0) {
    writer.writeEnum(
      603,
      f
    );
  }
  f = message.getParticleAlgorithm();
  if (f !== 0.0) {
    writer.writeEnum(
      604,
      f
    );
  }
  f = message.getSmellPrimary();
  if (f !== 0.0) {
    writer.writeEnum(
      605,
      f
    );
  }
  f = message.getSmellSecondary();
  if (f !== 0.0) {
    writer.writeEnum(
      606,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.protobuf.Flower.Stats.SkeletonType = {
  THREE_LEAF: 0
};

/**
 * @enum {number}
 */
proto.protobuf.Flower.Stats.BaseNugType = {
  NUG_BASE_BASIC: 0,
  NUG_BASE_EGGPLANT: 1,
  NUG_BASE_HAIRY: 2,
  NUG_BASE_LUMP: 3,
  NUG_BASE_MELLOW: 4,
  NUG_BASE_ONION: 5
};

/**
 * @enum {number}
 */
proto.protobuf.Flower.Stats.PowderType = {
  BASIC_CONFIG_1: 0,
  BASIC_CONFIG_2: 1,
  EGGPLANT_CONFIG_1: 2,
  HAIRY_CONFIG_1: 3,
  LUMP_CONFIG_1: 4,
  MELLOW_CONFIG_1: 5,
  ONION_CONFIG_1: 6
};

/**
 * @enum {number}
 */
proto.protobuf.Flower.Stats.StemType = {
  STEM_1: 0,
  STEM_2: 1,
  STEM_3: 2,
  STEM_4: 3,
  STEM_5: 4,
  STEM_6: 5,
  STEM_7: 6
};

/**
 * @enum {number}
 */
proto.protobuf.Flower.Stats.MainLeafType = {
  BASE_LEAF_1: 0,
  BASE_LEAF_2: 1,
  BASE_LEAF_3: 2,
  BASE_LEAF_4: 3,
  BASE_LEAF_5: 4,
  BASE_LEAF_6: 5
};

/**
 * @enum {number}
 */
proto.protobuf.Flower.Stats.NugLeafType = {
  NUG_LEAF_1: 0,
  NUG_LEAF_2: 1,
  NUG_LEAF_3: 2,
  NUG_LEAF_4: 3,
  NUG_LEAF_5: 4,
  NUG_LEAF_6: 5
};

/**
 * @enum {number}
 */
proto.protobuf.Flower.Stats.BodyType = {
  SATIVA: 0,
  INDICA: 1,
  RUDERALIS: 2
};

/**
 * @enum {number}
 */
proto.protobuf.Flower.Stats.Set = {
  NONE: 0,
  GENESIS: 1,
  CRYPTO: 2,
  CLASSICS: 3,
  ANCIENT: 4,
  FOUR_TWENTY: 5,
  DELTA: 6
};

/**
 * @enum {number}
 */
proto.protobuf.Flower.Stats.LandAffinity = {
  SOIL: 0,
  STONE: 1,
  SAND: 2,
  LAVA: 3,
  WATER: 4,
  ICE: 5
};

/**
 * @enum {number}
 */
proto.protobuf.Flower.Stats.LandVariant = {
  LAND_VARIANT_NONE: 0
};

/**
 * @enum {number}
 */
proto.protobuf.Flower.Stats.IdleAnimation = {
  IDLE: 0
};

/**
 * @enum {number}
 */
proto.protobuf.Flower.Stats.ParticleAlgorithm = {
  PARTICLE_NONE: 0,
  POWDER_NUG: 1,
  HALO: 2,
  HEART_RAIN: 3,
  BROKEN_HEART_RAIN: 4,
  CANNABIS_RAIN: 5,
  LAZERS: 6,
  HAZE: 7,
  FIRE: 8,
  BUBBLE: 9,
  INCANTATION: 10,
  ALPHA_PARTICLE: 11,
  BETA_PARTICLE: 12,
  GAMMA_PARTICLE: 13,
  DELTA_PARTICLE: 14,
  CANNABIS_INCANTATION: 15,
  CANNABIS_LAZERS: 16
};

/**
 * @enum {number}
 */
proto.protobuf.Flower.Stats.Smell = {
  CITRUS: 0,
  FLORAL: 1,
  SKUNK: 2,
  EARTH: 3,
  CHEESE: 4,
  SMOKE: 5,
  PINE: 6,
  FRUIT: 7
};

/**
 * optional int32 mutability = 100;
 * @return {number}
 */
proto.protobuf.Flower.Stats.prototype.getMutability = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 100, 0));
};


/** @param {number} value */
proto.protobuf.Flower.Stats.prototype.setMutability = function(value) {
  jspb.Message.setProto3IntField(this, 100, value);
};


/**
 * optional int32 growth_speed = 101;
 * @return {number}
 */
proto.protobuf.Flower.Stats.prototype.getGrowthSpeed = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 101, 0));
};


/** @param {number} value */
proto.protobuf.Flower.Stats.prototype.setGrowthSpeed = function(value) {
  jspb.Message.setProto3IntField(this, 101, value);
};


/**
 * optional int32 harvest_size = 102;
 * @return {number}
 */
proto.protobuf.Flower.Stats.prototype.getHarvestSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 102, 0));
};


/** @param {number} value */
proto.protobuf.Flower.Stats.prototype.setHarvestSize = function(value) {
  jspb.Message.setProto3IntField(this, 102, value);
};


/**
 * optional int32 harvest_spread = 103;
 * @return {number}
 */
proto.protobuf.Flower.Stats.prototype.getHarvestSpread = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 103, 0));
};


/** @param {number} value */
proto.protobuf.Flower.Stats.prototype.setHarvestSpread = function(value) {
  jspb.Message.setProto3IntField(this, 103, value);
};


/**
 * optional int32 seed_drop = 200;
 * @return {number}
 */
proto.protobuf.Flower.Stats.prototype.getSeedDrop = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 200, 0));
};


/** @param {number} value */
proto.protobuf.Flower.Stats.prototype.setSeedDrop = function(value) {
  jspb.Message.setProto3IntField(this, 200, value);
};


/**
 * optional int32 berry_drop = 201;
 * @return {number}
 */
proto.protobuf.Flower.Stats.prototype.getBerryDrop = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 201, 0));
};


/** @param {number} value */
proto.protobuf.Flower.Stats.prototype.setBerryDrop = function(value) {
  jspb.Message.setProto3IntField(this, 201, value);
};


/**
 * optional int32 flower_drop = 202;
 * @return {number}
 */
proto.protobuf.Flower.Stats.prototype.getFlowerDrop = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 202, 0));
};


/** @param {number} value */
proto.protobuf.Flower.Stats.prototype.setFlowerDrop = function(value) {
  jspb.Message.setProto3IntField(this, 202, value);
};


/**
 * optional int32 nug_drop = 203;
 * @return {number}
 */
proto.protobuf.Flower.Stats.prototype.getNugDrop = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 203, 0));
};


/** @param {number} value */
proto.protobuf.Flower.Stats.prototype.setNugDrop = function(value) {
  jspb.Message.setProto3IntField(this, 203, value);
};


/**
 * optional int32 height = 300;
 * @return {number}
 */
proto.protobuf.Flower.Stats.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 300, 0));
};


/** @param {number} value */
proto.protobuf.Flower.Stats.prototype.setHeight = function(value) {
  jspb.Message.setProto3IntField(this, 300, value);
};


/**
 * optional int32 thc = 301;
 * @return {number}
 */
proto.protobuf.Flower.Stats.prototype.getThc = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 301, 0));
};


/** @param {number} value */
proto.protobuf.Flower.Stats.prototype.setThc = function(value) {
  jspb.Message.setProto3IntField(this, 301, value);
};


/**
 * optional int32 cbd = 302;
 * @return {number}
 */
proto.protobuf.Flower.Stats.prototype.getCbd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 302, 0));
};


/** @param {number} value */
proto.protobuf.Flower.Stats.prototype.setCbd = function(value) {
  jspb.Message.setProto3IntField(this, 302, value);
};


/**
 * optional int32 smell_primary_strength = 303;
 * @return {number}
 */
proto.protobuf.Flower.Stats.prototype.getSmellPrimaryStrength = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 303, 0));
};


/** @param {number} value */
proto.protobuf.Flower.Stats.prototype.setSmellPrimaryStrength = function(value) {
  jspb.Message.setProto3IntField(this, 303, value);
};


/**
 * optional int32 smell_secondary_strength = 304;
 * @return {number}
 */
proto.protobuf.Flower.Stats.prototype.getSmellSecondaryStrength = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 304, 0));
};


/** @param {number} value */
proto.protobuf.Flower.Stats.prototype.setSmellSecondaryStrength = function(value) {
  jspb.Message.setProto3IntField(this, 304, value);
};


/**
 * optional int32 base_nug_scale = 305;
 * @return {number}
 */
proto.protobuf.Flower.Stats.prototype.getBaseNugScale = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 305, 0));
};


/** @param {number} value */
proto.protobuf.Flower.Stats.prototype.setBaseNugScale = function(value) {
  jspb.Message.setProto3IntField(this, 305, value);
};


/**
 * optional int32 main_leaf_scale = 306;
 * @return {number}
 */
proto.protobuf.Flower.Stats.prototype.getMainLeafScale = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 306, 0));
};


/** @param {number} value */
proto.protobuf.Flower.Stats.prototype.setMainLeafScale = function(value) {
  jspb.Message.setProto3IntField(this, 306, value);
};


/**
 * optional int32 nug_leaf_scale = 307;
 * @return {number}
 */
proto.protobuf.Flower.Stats.prototype.getNugLeafScale = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 307, 0));
};


/** @param {number} value */
proto.protobuf.Flower.Stats.prototype.setNugLeafScale = function(value) {
  jspb.Message.setProto3IntField(this, 307, value);
};


/**
 * optional int32 stem_scale = 308;
 * @return {number}
 */
proto.protobuf.Flower.Stats.prototype.getStemScale = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 308, 0));
};


/** @param {number} value */
proto.protobuf.Flower.Stats.prototype.setStemScale = function(value) {
  jspb.Message.setProto3IntField(this, 308, value);
};


/**
 * optional string base_nug_color = 400;
 * @return {string}
 */
proto.protobuf.Flower.Stats.prototype.getBaseNugColor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 400, ""));
};


/** @param {string} value */
proto.protobuf.Flower.Stats.prototype.setBaseNugColor = function(value) {
  jspb.Message.setProto3StringField(this, 400, value);
};


/**
 * optional string leaf_color = 401;
 * @return {string}
 */
proto.protobuf.Flower.Stats.prototype.getLeafColor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 401, ""));
};


/** @param {string} value */
proto.protobuf.Flower.Stats.prototype.setLeafColor = function(value) {
  jspb.Message.setProto3StringField(this, 401, value);
};


/**
 * optional string stem_color = 402;
 * @return {string}
 */
proto.protobuf.Flower.Stats.prototype.getStemColor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 402, ""));
};


/** @param {string} value */
proto.protobuf.Flower.Stats.prototype.setStemColor = function(value) {
  jspb.Message.setProto3StringField(this, 402, value);
};


/**
 * optional string powder_color = 403;
 * @return {string}
 */
proto.protobuf.Flower.Stats.prototype.getPowderColor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 403, ""));
};


/** @param {string} value */
proto.protobuf.Flower.Stats.prototype.setPowderColor = function(value) {
  jspb.Message.setProto3StringField(this, 403, value);
};


/**
 * optional SkeletonType skeleton_type = 500;
 * @return {!proto.protobuf.Flower.Stats.SkeletonType}
 */
proto.protobuf.Flower.Stats.prototype.getSkeletonType = function() {
  return /** @type {!proto.protobuf.Flower.Stats.SkeletonType} */ (jspb.Message.getFieldWithDefault(this, 500, 0));
};


/** @param {!proto.protobuf.Flower.Stats.SkeletonType} value */
proto.protobuf.Flower.Stats.prototype.setSkeletonType = function(value) {
  jspb.Message.setProto3EnumField(this, 500, value);
};


/**
 * optional BaseNugType base_nug_type = 501;
 * @return {!proto.protobuf.Flower.Stats.BaseNugType}
 */
proto.protobuf.Flower.Stats.prototype.getBaseNugType = function() {
  return /** @type {!proto.protobuf.Flower.Stats.BaseNugType} */ (jspb.Message.getFieldWithDefault(this, 501, 0));
};


/** @param {!proto.protobuf.Flower.Stats.BaseNugType} value */
proto.protobuf.Flower.Stats.prototype.setBaseNugType = function(value) {
  jspb.Message.setProto3EnumField(this, 501, value);
};


/**
 * optional PowderType powder_type = 502;
 * @return {!proto.protobuf.Flower.Stats.PowderType}
 */
proto.protobuf.Flower.Stats.prototype.getPowderType = function() {
  return /** @type {!proto.protobuf.Flower.Stats.PowderType} */ (jspb.Message.getFieldWithDefault(this, 502, 0));
};


/** @param {!proto.protobuf.Flower.Stats.PowderType} value */
proto.protobuf.Flower.Stats.prototype.setPowderType = function(value) {
  jspb.Message.setProto3EnumField(this, 502, value);
};


/**
 * optional StemType stem_type = 503;
 * @return {!proto.protobuf.Flower.Stats.StemType}
 */
proto.protobuf.Flower.Stats.prototype.getStemType = function() {
  return /** @type {!proto.protobuf.Flower.Stats.StemType} */ (jspb.Message.getFieldWithDefault(this, 503, 0));
};


/** @param {!proto.protobuf.Flower.Stats.StemType} value */
proto.protobuf.Flower.Stats.prototype.setStemType = function(value) {
  jspb.Message.setProto3EnumField(this, 503, value);
};


/**
 * optional MainLeafType main_leaf_type = 504;
 * @return {!proto.protobuf.Flower.Stats.MainLeafType}
 */
proto.protobuf.Flower.Stats.prototype.getMainLeafType = function() {
  return /** @type {!proto.protobuf.Flower.Stats.MainLeafType} */ (jspb.Message.getFieldWithDefault(this, 504, 0));
};


/** @param {!proto.protobuf.Flower.Stats.MainLeafType} value */
proto.protobuf.Flower.Stats.prototype.setMainLeafType = function(value) {
  jspb.Message.setProto3EnumField(this, 504, value);
};


/**
 * optional NugLeafType nug_leaf_type = 505;
 * @return {!proto.protobuf.Flower.Stats.NugLeafType}
 */
proto.protobuf.Flower.Stats.prototype.getNugLeafType = function() {
  return /** @type {!proto.protobuf.Flower.Stats.NugLeafType} */ (jspb.Message.getFieldWithDefault(this, 505, 0));
};


/** @param {!proto.protobuf.Flower.Stats.NugLeafType} value */
proto.protobuf.Flower.Stats.prototype.setNugLeafType = function(value) {
  jspb.Message.setProto3EnumField(this, 505, value);
};


/**
 * optional BodyType body_type = 506;
 * @return {!proto.protobuf.Flower.Stats.BodyType}
 */
proto.protobuf.Flower.Stats.prototype.getBodyType = function() {
  return /** @type {!proto.protobuf.Flower.Stats.BodyType} */ (jspb.Message.getFieldWithDefault(this, 506, 0));
};


/** @param {!proto.protobuf.Flower.Stats.BodyType} value */
proto.protobuf.Flower.Stats.prototype.setBodyType = function(value) {
  jspb.Message.setProto3EnumField(this, 506, value);
};


/**
 * optional Set set = 600;
 * @return {!proto.protobuf.Flower.Stats.Set}
 */
proto.protobuf.Flower.Stats.prototype.getSet = function() {
  return /** @type {!proto.protobuf.Flower.Stats.Set} */ (jspb.Message.getFieldWithDefault(this, 600, 0));
};


/** @param {!proto.protobuf.Flower.Stats.Set} value */
proto.protobuf.Flower.Stats.prototype.setSet = function(value) {
  jspb.Message.setProto3EnumField(this, 600, value);
};


/**
 * optional LandAffinity land_affinity = 601;
 * @return {!proto.protobuf.Flower.Stats.LandAffinity}
 */
proto.protobuf.Flower.Stats.prototype.getLandAffinity = function() {
  return /** @type {!proto.protobuf.Flower.Stats.LandAffinity} */ (jspb.Message.getFieldWithDefault(this, 601, 0));
};


/** @param {!proto.protobuf.Flower.Stats.LandAffinity} value */
proto.protobuf.Flower.Stats.prototype.setLandAffinity = function(value) {
  jspb.Message.setProto3EnumField(this, 601, value);
};


/**
 * optional LandVariant land_variant = 602;
 * @return {!proto.protobuf.Flower.Stats.LandVariant}
 */
proto.protobuf.Flower.Stats.prototype.getLandVariant = function() {
  return /** @type {!proto.protobuf.Flower.Stats.LandVariant} */ (jspb.Message.getFieldWithDefault(this, 602, 0));
};


/** @param {!proto.protobuf.Flower.Stats.LandVariant} value */
proto.protobuf.Flower.Stats.prototype.setLandVariant = function(value) {
  jspb.Message.setProto3EnumField(this, 602, value);
};


/**
 * optional IdleAnimation idle_animation = 603;
 * @return {!proto.protobuf.Flower.Stats.IdleAnimation}
 */
proto.protobuf.Flower.Stats.prototype.getIdleAnimation = function() {
  return /** @type {!proto.protobuf.Flower.Stats.IdleAnimation} */ (jspb.Message.getFieldWithDefault(this, 603, 0));
};


/** @param {!proto.protobuf.Flower.Stats.IdleAnimation} value */
proto.protobuf.Flower.Stats.prototype.setIdleAnimation = function(value) {
  jspb.Message.setProto3EnumField(this, 603, value);
};


/**
 * optional ParticleAlgorithm particle_algorithm = 604;
 * @return {!proto.protobuf.Flower.Stats.ParticleAlgorithm}
 */
proto.protobuf.Flower.Stats.prototype.getParticleAlgorithm = function() {
  return /** @type {!proto.protobuf.Flower.Stats.ParticleAlgorithm} */ (jspb.Message.getFieldWithDefault(this, 604, 0));
};


/** @param {!proto.protobuf.Flower.Stats.ParticleAlgorithm} value */
proto.protobuf.Flower.Stats.prototype.setParticleAlgorithm = function(value) {
  jspb.Message.setProto3EnumField(this, 604, value);
};


/**
 * optional Smell smell_primary = 605;
 * @return {!proto.protobuf.Flower.Stats.Smell}
 */
proto.protobuf.Flower.Stats.prototype.getSmellPrimary = function() {
  return /** @type {!proto.protobuf.Flower.Stats.Smell} */ (jspb.Message.getFieldWithDefault(this, 605, 0));
};


/** @param {!proto.protobuf.Flower.Stats.Smell} value */
proto.protobuf.Flower.Stats.prototype.setSmellPrimary = function(value) {
  jspb.Message.setProto3EnumField(this, 605, value);
};


/**
 * optional Smell smell_secondary = 606;
 * @return {!proto.protobuf.Flower.Stats.Smell}
 */
proto.protobuf.Flower.Stats.prototype.getSmellSecondary = function() {
  return /** @type {!proto.protobuf.Flower.Stats.Smell} */ (jspb.Message.getFieldWithDefault(this, 606, 0));
};


/** @param {!proto.protobuf.Flower.Stats.Smell} value */
proto.protobuf.Flower.Stats.prototype.setSmellSecondary = function(value) {
  jspb.Message.setProto3EnumField(this, 606, value);
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.protobuf.Flower.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.protobuf.Flower.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Version version = 2;
 * @return {!proto.protobuf.Flower.Version}
 */
proto.protobuf.Flower.prototype.getVersion = function() {
  return /** @type {!proto.protobuf.Flower.Version} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.protobuf.Flower.Version} value */
proto.protobuf.Flower.prototype.setVersion = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional int64 description_id = 3;
 * @return {number}
 */
proto.protobuf.Flower.prototype.getDescriptionId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.protobuf.Flower.prototype.setDescriptionId = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 unique_id = 4;
 * @return {number}
 */
proto.protobuf.Flower.prototype.getUniqueId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.protobuf.Flower.prototype.setUniqueId = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 store_db_id = 5;
 * @return {number}
 */
proto.protobuf.Flower.prototype.getStoreDbId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.protobuf.Flower.prototype.setStoreDbId = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int64 parent_one_id = 6;
 * @return {number}
 */
proto.protobuf.Flower.prototype.getParentOneId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.protobuf.Flower.prototype.setParentOneId = function(value) {
  jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int64 parent_two_id = 7;
 * @return {number}
 */
proto.protobuf.Flower.prototype.getParentTwoId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.protobuf.Flower.prototype.setParentTwoId = function(value) {
  jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int64 created_after_block = 8;
 * @return {number}
 */
proto.protobuf.Flower.prototype.getCreatedAfterBlock = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.protobuf.Flower.prototype.setCreatedAfterBlock = function(value) {
  jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional Stats stats = 15;
 * @return {?proto.protobuf.Flower.Stats}
 */
proto.protobuf.Flower.prototype.getStats = function() {
  return /** @type{?proto.protobuf.Flower.Stats} */ (
    jspb.Message.getWrapperField(this, proto.protobuf.Flower.Stats, 15));
};


/** @param {?proto.protobuf.Flower.Stats|undefined} value */
proto.protobuf.Flower.prototype.setStats = function(value) {
  jspb.Message.setWrapperField(this, 15, value);
};


proto.protobuf.Flower.prototype.clearStats = function() {
  this.setStats(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protobuf.Flower.prototype.hasStats = function() {
  return jspb.Message.getField(this, 15) != null;
};


goog.object.extend(exports, proto.protobuf);
