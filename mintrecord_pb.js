/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var protobuf_flower_pb = require('../protobuf/flower_pb.js');
goog.exportSymbol('proto.protobuf.MintRecord', null, global);
goog.exportSymbol('proto.protobuf.MintRecord.MintingDetails', null, global);
goog.exportSymbol('proto.protobuf.MintRecord.PaymentDetails', null, global);
goog.exportSymbol('proto.protobuf.MintRecord.PaymentDetails.PaymentType', null, global);
goog.exportSymbol('proto.protobuf.MintRecord.Status', null, global);
goog.exportSymbol('proto.protobuf.MintRecord.Timestamps', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.MintRecord = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf.MintRecord, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protobuf.MintRecord.displayName = 'proto.protobuf.MintRecord';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf.MintRecord.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf.MintRecord.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf.MintRecord} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MintRecord.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0),
    statusmessage: jspb.Message.getFieldWithDefault(msg, 2, ""),
    payeraddress: jspb.Message.getFieldWithDefault(msg, 3, ""),
    paymentdetails: (f = msg.getPaymentdetails()) && proto.protobuf.MintRecord.PaymentDetails.toObject(includeInstance, f),
    mintingtransactionhash: jspb.Message.getFieldWithDefault(msg, 5, ""),
    mintingdetails: (f = msg.getMintingdetails()) && proto.protobuf.MintRecord.MintingDetails.toObject(includeInstance, f),
    timestamps: (f = msg.getTimestamps()) && proto.protobuf.MintRecord.Timestamps.toObject(includeInstance, f),
    flowerdata: (f = msg.getFlowerdata()) && protobuf_flower_pb.Flower.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.MintRecord}
 */
proto.protobuf.MintRecord.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.MintRecord;
  return proto.protobuf.MintRecord.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.MintRecord} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.MintRecord}
 */
proto.protobuf.MintRecord.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.protobuf.MintRecord.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatusmessage(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPayeraddress(value);
      break;
    case 4:
      var value = new proto.protobuf.MintRecord.PaymentDetails;
      reader.readMessage(value,proto.protobuf.MintRecord.PaymentDetails.deserializeBinaryFromReader);
      msg.setPaymentdetails(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setMintingtransactionhash(value);
      break;
    case 6:
      var value = new proto.protobuf.MintRecord.MintingDetails;
      reader.readMessage(value,proto.protobuf.MintRecord.MintingDetails.deserializeBinaryFromReader);
      msg.setMintingdetails(value);
      break;
    case 8:
      var value = new proto.protobuf.MintRecord.Timestamps;
      reader.readMessage(value,proto.protobuf.MintRecord.Timestamps.deserializeBinaryFromReader);
      msg.setTimestamps(value);
      break;
    case 9:
      var value = new protobuf_flower_pb.Flower;
      reader.readMessage(value,protobuf_flower_pb.Flower.deserializeBinaryFromReader);
      msg.setFlowerdata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.MintRecord.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.MintRecord.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.MintRecord} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MintRecord.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getStatusmessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPayeraddress();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPaymentdetails();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.protobuf.MintRecord.PaymentDetails.serializeBinaryToWriter
    );
  }
  f = message.getMintingtransactionhash();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getMintingdetails();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.protobuf.MintRecord.MintingDetails.serializeBinaryToWriter
    );
  }
  f = message.getTimestamps();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.protobuf.MintRecord.Timestamps.serializeBinaryToWriter
    );
  }
  f = message.getFlowerdata();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      protobuf_flower_pb.Flower.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.protobuf.MintRecord.Status = {
  STATUS_NONE: 0,
  STATUS_STARTED: 1,
  STATUS_COMPLETED: 2,
  STATUS_ERR: 5,
  STATUS_ERR_TIMEOUT: 6
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.MintRecord.PaymentDetails = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf.MintRecord.PaymentDetails, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protobuf.MintRecord.PaymentDetails.displayName = 'proto.protobuf.MintRecord.PaymentDetails';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf.MintRecord.PaymentDetails.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf.MintRecord.PaymentDetails.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf.MintRecord.PaymentDetails} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MintRecord.PaymentDetails.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    value: jspb.Message.getFieldWithDefault(msg, 2, 0),
    storedbid: jspb.Message.getFieldWithDefault(msg, 3, 0),
    itemtype: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.MintRecord.PaymentDetails}
 */
proto.protobuf.MintRecord.PaymentDetails.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.MintRecord.PaymentDetails;
  return proto.protobuf.MintRecord.PaymentDetails.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.MintRecord.PaymentDetails} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.MintRecord.PaymentDetails}
 */
proto.protobuf.MintRecord.PaymentDetails.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.protobuf.MintRecord.PaymentDetails.PaymentType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setValue(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStoredbid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setItemtype(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.MintRecord.PaymentDetails.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.MintRecord.PaymentDetails.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.MintRecord.PaymentDetails} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MintRecord.PaymentDetails.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getValue();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getStoredbid();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getItemtype();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.protobuf.MintRecord.PaymentDetails.PaymentType = {
  TYPE_ETH: 0,
  TYPE_SEED: 1
};

/**
 * optional PaymentType type = 1;
 * @return {!proto.protobuf.MintRecord.PaymentDetails.PaymentType}
 */
proto.protobuf.MintRecord.PaymentDetails.prototype.getType = function() {
  return /** @type {!proto.protobuf.MintRecord.PaymentDetails.PaymentType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.protobuf.MintRecord.PaymentDetails.PaymentType} value */
proto.protobuf.MintRecord.PaymentDetails.prototype.setType = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional int64 value = 2;
 * @return {number}
 */
proto.protobuf.MintRecord.PaymentDetails.prototype.getValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.protobuf.MintRecord.PaymentDetails.prototype.setValue = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 storeDBID = 3;
 * @return {number}
 */
proto.protobuf.MintRecord.PaymentDetails.prototype.getStoredbid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.protobuf.MintRecord.PaymentDetails.prototype.setStoredbid = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 itemType = 4;
 * @return {number}
 */
proto.protobuf.MintRecord.PaymentDetails.prototype.getItemtype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.protobuf.MintRecord.PaymentDetails.prototype.setItemtype = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.MintRecord.MintingDetails = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf.MintRecord.MintingDetails, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protobuf.MintRecord.MintingDetails.displayName = 'proto.protobuf.MintRecord.MintingDetails';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf.MintRecord.MintingDetails.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf.MintRecord.MintingDetails.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf.MintRecord.MintingDetails} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MintRecord.MintingDetails.toObject = function(includeInstance, msg) {
  var f, obj = {
    gasprice: jspb.Message.getFieldWithDefault(msg, 1, 0),
    gaslimit: jspb.Message.getFieldWithDefault(msg, 2, 0),
    minteraddress: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.MintRecord.MintingDetails}
 */
proto.protobuf.MintRecord.MintingDetails.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.MintRecord.MintingDetails;
  return proto.protobuf.MintRecord.MintingDetails.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.MintRecord.MintingDetails} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.MintRecord.MintingDetails}
 */
proto.protobuf.MintRecord.MintingDetails.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setGasprice(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setGaslimit(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMinteraddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.MintRecord.MintingDetails.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.MintRecord.MintingDetails.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.MintRecord.MintingDetails} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MintRecord.MintingDetails.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGasprice();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getGaslimit();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getMinteraddress();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional int64 gasPrice = 1;
 * @return {number}
 */
proto.protobuf.MintRecord.MintingDetails.prototype.getGasprice = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.protobuf.MintRecord.MintingDetails.prototype.setGasprice = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 gasLimit = 2;
 * @return {number}
 */
proto.protobuf.MintRecord.MintingDetails.prototype.getGaslimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.protobuf.MintRecord.MintingDetails.prototype.setGaslimit = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string minterAddress = 3;
 * @return {string}
 */
proto.protobuf.MintRecord.MintingDetails.prototype.getMinteraddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.protobuf.MintRecord.MintingDetails.prototype.setMinteraddress = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.MintRecord.Timestamps = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf.MintRecord.Timestamps, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protobuf.MintRecord.Timestamps.displayName = 'proto.protobuf.MintRecord.Timestamps';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf.MintRecord.Timestamps.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf.MintRecord.Timestamps.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf.MintRecord.Timestamps} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MintRecord.Timestamps.toObject = function(includeInstance, msg) {
  var f, obj = {
    started: jspb.Message.getFieldWithDefault(msg, 1, 0),
    completed: jspb.Message.getFieldWithDefault(msg, 2, 0),
    error: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.MintRecord.Timestamps}
 */
proto.protobuf.MintRecord.Timestamps.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.MintRecord.Timestamps;
  return proto.protobuf.MintRecord.Timestamps.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.MintRecord.Timestamps} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.MintRecord.Timestamps}
 */
proto.protobuf.MintRecord.Timestamps.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStarted(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCompleted(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.MintRecord.Timestamps.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.MintRecord.Timestamps.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.MintRecord.Timestamps} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MintRecord.Timestamps.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStarted();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getCompleted();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getError();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * optional int64 started = 1;
 * @return {number}
 */
proto.protobuf.MintRecord.Timestamps.prototype.getStarted = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.protobuf.MintRecord.Timestamps.prototype.setStarted = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 completed = 2;
 * @return {number}
 */
proto.protobuf.MintRecord.Timestamps.prototype.getCompleted = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.protobuf.MintRecord.Timestamps.prototype.setCompleted = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 error = 3;
 * @return {number}
 */
proto.protobuf.MintRecord.Timestamps.prototype.getError = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.protobuf.MintRecord.Timestamps.prototype.setError = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional Status status = 1;
 * @return {!proto.protobuf.MintRecord.Status}
 */
proto.protobuf.MintRecord.prototype.getStatus = function() {
  return /** @type {!proto.protobuf.MintRecord.Status} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.protobuf.MintRecord.Status} value */
proto.protobuf.MintRecord.prototype.setStatus = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string statusMessage = 2;
 * @return {string}
 */
proto.protobuf.MintRecord.prototype.getStatusmessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.protobuf.MintRecord.prototype.setStatusmessage = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string payerAddress = 3;
 * @return {string}
 */
proto.protobuf.MintRecord.prototype.getPayeraddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.protobuf.MintRecord.prototype.setPayeraddress = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional PaymentDetails paymentDetails = 4;
 * @return {?proto.protobuf.MintRecord.PaymentDetails}
 */
proto.protobuf.MintRecord.prototype.getPaymentdetails = function() {
  return /** @type{?proto.protobuf.MintRecord.PaymentDetails} */ (
    jspb.Message.getWrapperField(this, proto.protobuf.MintRecord.PaymentDetails, 4));
};


/** @param {?proto.protobuf.MintRecord.PaymentDetails|undefined} value */
proto.protobuf.MintRecord.prototype.setPaymentdetails = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.protobuf.MintRecord.prototype.clearPaymentdetails = function() {
  this.setPaymentdetails(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protobuf.MintRecord.prototype.hasPaymentdetails = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string mintingTransactionHash = 5;
 * @return {string}
 */
proto.protobuf.MintRecord.prototype.getMintingtransactionhash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.protobuf.MintRecord.prototype.setMintingtransactionhash = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional MintingDetails mintingDetails = 6;
 * @return {?proto.protobuf.MintRecord.MintingDetails}
 */
proto.protobuf.MintRecord.prototype.getMintingdetails = function() {
  return /** @type{?proto.protobuf.MintRecord.MintingDetails} */ (
    jspb.Message.getWrapperField(this, proto.protobuf.MintRecord.MintingDetails, 6));
};


/** @param {?proto.protobuf.MintRecord.MintingDetails|undefined} value */
proto.protobuf.MintRecord.prototype.setMintingdetails = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.protobuf.MintRecord.prototype.clearMintingdetails = function() {
  this.setMintingdetails(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protobuf.MintRecord.prototype.hasMintingdetails = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Timestamps timestamps = 8;
 * @return {?proto.protobuf.MintRecord.Timestamps}
 */
proto.protobuf.MintRecord.prototype.getTimestamps = function() {
  return /** @type{?proto.protobuf.MintRecord.Timestamps} */ (
    jspb.Message.getWrapperField(this, proto.protobuf.MintRecord.Timestamps, 8));
};


/** @param {?proto.protobuf.MintRecord.Timestamps|undefined} value */
proto.protobuf.MintRecord.prototype.setTimestamps = function(value) {
  jspb.Message.setWrapperField(this, 8, value);
};


proto.protobuf.MintRecord.prototype.clearTimestamps = function() {
  this.setTimestamps(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protobuf.MintRecord.prototype.hasTimestamps = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional Flower flowerData = 9;
 * @return {?proto.protobuf.Flower}
 */
proto.protobuf.MintRecord.prototype.getFlowerdata = function() {
  return /** @type{?proto.protobuf.Flower} */ (
    jspb.Message.getWrapperField(this, protobuf_flower_pb.Flower, 9));
};


/** @param {?proto.protobuf.Flower|undefined} value */
proto.protobuf.MintRecord.prototype.setFlowerdata = function(value) {
  jspb.Message.setWrapperField(this, 9, value);
};


proto.protobuf.MintRecord.prototype.clearFlowerdata = function() {
  this.setFlowerdata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protobuf.MintRecord.prototype.hasFlowerdata = function() {
  return jspb.Message.getField(this, 9) != null;
};


goog.object.extend(exports, proto.protobuf);
