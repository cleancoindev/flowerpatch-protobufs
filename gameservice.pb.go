// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protobuf/gameservice.proto

package protobuf

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_struct "github.com/golang/protobuf/ptypes/struct"
	math "math"
)

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PlantedFlowers struct {
	Planted              []*PlantedFlowers_Planted `protobuf:"bytes,1,rep,name=planted,proto3" json:"planted,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-" datastore:"-"`
	XXX_unrecognized     []byte                    `json:"-" datastore:"-"`
	XXX_sizecache        int32                     `json:"-" datastore:"-"`
}

func (m *PlantedFlowers) Reset()         { *m = PlantedFlowers{} }
func (m *PlantedFlowers) String() string { return proto.CompactTextString(m) }
func (*PlantedFlowers) ProtoMessage()    {}
func (*PlantedFlowers) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0a023b8fcd10370, []int{0}
}

func (m *PlantedFlowers) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlantedFlowers.Unmarshal(m, b)
}
func (m *PlantedFlowers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlantedFlowers.Marshal(b, m, deterministic)
}
func (m *PlantedFlowers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlantedFlowers.Merge(m, src)
}
func (m *PlantedFlowers) XXX_Size() int {
	return xxx_messageInfo_PlantedFlowers.Size(m)
}
func (m *PlantedFlowers) XXX_DiscardUnknown() {
	xxx_messageInfo_PlantedFlowers.DiscardUnknown(m)
}

var xxx_messageInfo_PlantedFlowers proto.InternalMessageInfo

func (m *PlantedFlowers) GetPlanted() []*PlantedFlowers_Planted {
	if m != nil {
		return m.Planted
	}
	return nil
}

type PlantedFlowers_Planted struct {
	ID                   int32    `protobuf:"varint,4,opt,name=i_d,json=iD,proto3" json:"i_d,omitempty"`
	LocationX            int32    `protobuf:"varint,5,opt,name=location_x,json=locationX,proto3" json:"location_x,omitempty"`
	LocationY            int32    `protobuf:"varint,6,opt,name=location_y,json=locationY,proto3" json:"location_y,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" datastore:"-"`
	XXX_unrecognized     []byte   `json:"-" datastore:"-"`
	XXX_sizecache        int32    `json:"-" datastore:"-"`
}

func (m *PlantedFlowers_Planted) Reset()         { *m = PlantedFlowers_Planted{} }
func (m *PlantedFlowers_Planted) String() string { return proto.CompactTextString(m) }
func (*PlantedFlowers_Planted) ProtoMessage()    {}
func (*PlantedFlowers_Planted) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0a023b8fcd10370, []int{0, 0}
}

func (m *PlantedFlowers_Planted) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlantedFlowers_Planted.Unmarshal(m, b)
}
func (m *PlantedFlowers_Planted) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlantedFlowers_Planted.Marshal(b, m, deterministic)
}
func (m *PlantedFlowers_Planted) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlantedFlowers_Planted.Merge(m, src)
}
func (m *PlantedFlowers_Planted) XXX_Size() int {
	return xxx_messageInfo_PlantedFlowers_Planted.Size(m)
}
func (m *PlantedFlowers_Planted) XXX_DiscardUnknown() {
	xxx_messageInfo_PlantedFlowers_Planted.DiscardUnknown(m)
}

var xxx_messageInfo_PlantedFlowers_Planted proto.InternalMessageInfo

func (m *PlantedFlowers_Planted) GetID() int32 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *PlantedFlowers_Planted) GetLocationX() int32 {
	if m != nil {
		return m.LocationX
	}
	return 0
}

func (m *PlantedFlowers_Planted) GetLocationY() int32 {
	if m != nil {
		return m.LocationY
	}
	return 0
}

type InteractionRequest struct {
	SourceAccount        string          `protobuf:"bytes,1,opt,name=source_account,json=sourceAccount,proto3" json:"source_account,omitempty"`
	X                    int32           `protobuf:"varint,2,opt,name=x,proto3" json:"x,omitempty"`
	Y                    int32           `protobuf:"varint,3,opt,name=y,proto3" json:"y,omitempty"`
	Data                 *_struct.Struct `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-" datastore:"-"`
	XXX_unrecognized     []byte          `json:"-" datastore:"-"`
	XXX_sizecache        int32           `json:"-" datastore:"-"`
}

func (m *InteractionRequest) Reset()         { *m = InteractionRequest{} }
func (m *InteractionRequest) String() string { return proto.CompactTextString(m) }
func (*InteractionRequest) ProtoMessage()    {}
func (*InteractionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0a023b8fcd10370, []int{1}
}

func (m *InteractionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InteractionRequest.Unmarshal(m, b)
}
func (m *InteractionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InteractionRequest.Marshal(b, m, deterministic)
}
func (m *InteractionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InteractionRequest.Merge(m, src)
}
func (m *InteractionRequest) XXX_Size() int {
	return xxx_messageInfo_InteractionRequest.Size(m)
}
func (m *InteractionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InteractionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InteractionRequest proto.InternalMessageInfo

func (m *InteractionRequest) GetSourceAccount() string {
	if m != nil {
		return m.SourceAccount
	}
	return ""
}

func (m *InteractionRequest) GetX() int32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *InteractionRequest) GetY() int32 {
	if m != nil {
		return m.Y
	}
	return 0
}

func (m *InteractionRequest) GetData() *_struct.Struct {
	if m != nil {
		return m.Data
	}
	return nil
}

// Currently used for Presents/Drops:
//  - unique_i_d: DropRequest database key
//  - roll: 0-100 prize roll
//  - result_type: string representing the prize category
//  - text: user-facing description of the prize
type InteractionReply struct {
	UniqueID             string   `protobuf:"bytes,1,opt,name=unique_i_d,json=uniqueID,proto3" json:"unique_i_d,omitempty"`
	Roll                 int32    `protobuf:"varint,2,opt,name=roll,proto3" json:"roll,omitempty"`
	ResultType           string   `protobuf:"bytes,3,opt,name=result_type,json=resultType,proto3" json:"result_type,omitempty"`
	Text                 string   `protobuf:"bytes,4,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" datastore:"-"`
	XXX_unrecognized     []byte   `json:"-" datastore:"-"`
	XXX_sizecache        int32    `json:"-" datastore:"-"`
}

func (m *InteractionReply) Reset()         { *m = InteractionReply{} }
func (m *InteractionReply) String() string { return proto.CompactTextString(m) }
func (*InteractionReply) ProtoMessage()    {}
func (*InteractionReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0a023b8fcd10370, []int{2}
}

func (m *InteractionReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InteractionReply.Unmarshal(m, b)
}
func (m *InteractionReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InteractionReply.Marshal(b, m, deterministic)
}
func (m *InteractionReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InteractionReply.Merge(m, src)
}
func (m *InteractionReply) XXX_Size() int {
	return xxx_messageInfo_InteractionReply.Size(m)
}
func (m *InteractionReply) XXX_DiscardUnknown() {
	xxx_messageInfo_InteractionReply.DiscardUnknown(m)
}

var xxx_messageInfo_InteractionReply proto.InternalMessageInfo

func (m *InteractionReply) GetUniqueID() string {
	if m != nil {
		return m.UniqueID
	}
	return ""
}

func (m *InteractionReply) GetRoll() int32 {
	if m != nil {
		return m.Roll
	}
	return 0
}

func (m *InteractionReply) GetResultType() string {
	if m != nil {
		return m.ResultType
	}
	return ""
}

func (m *InteractionReply) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

type GameTileRequest struct {
	SourceAccount        string    `protobuf:"bytes,1,opt,name=source_account,json=sourceAccount,proto3" json:"source_account,omitempty"`
	GameTile             *GameTile `protobuf:"bytes,2,opt,name=game_tile,json=gameTile,proto3" json:"game_tile,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-" datastore:"-"`
	XXX_unrecognized     []byte    `json:"-" datastore:"-"`
	XXX_sizecache        int32     `json:"-" datastore:"-"`
}

func (m *GameTileRequest) Reset()         { *m = GameTileRequest{} }
func (m *GameTileRequest) String() string { return proto.CompactTextString(m) }
func (*GameTileRequest) ProtoMessage()    {}
func (*GameTileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0a023b8fcd10370, []int{3}
}

func (m *GameTileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameTileRequest.Unmarshal(m, b)
}
func (m *GameTileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameTileRequest.Marshal(b, m, deterministic)
}
func (m *GameTileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameTileRequest.Merge(m, src)
}
func (m *GameTileRequest) XXX_Size() int {
	return xxx_messageInfo_GameTileRequest.Size(m)
}
func (m *GameTileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GameTileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GameTileRequest proto.InternalMessageInfo

func (m *GameTileRequest) GetSourceAccount() string {
	if m != nil {
		return m.SourceAccount
	}
	return ""
}

func (m *GameTileRequest) GetGameTile() *GameTile {
	if m != nil {
		return m.GameTile
	}
	return nil
}

type GameStateRequest struct {
	SourceAccount        string   `protobuf:"bytes,1,opt,name=source_account,json=sourceAccount,proto3" json:"source_account,omitempty"`
	LastTimestamp        int64    `protobuf:"varint,2,opt,name=last_timestamp,json=lastTimestamp,proto3" json:"last_timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" datastore:"-"`
	XXX_unrecognized     []byte   `json:"-" datastore:"-"`
	XXX_sizecache        int32    `json:"-" datastore:"-"`
}

func (m *GameStateRequest) Reset()         { *m = GameStateRequest{} }
func (m *GameStateRequest) String() string { return proto.CompactTextString(m) }
func (*GameStateRequest) ProtoMessage()    {}
func (*GameStateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0a023b8fcd10370, []int{4}
}

func (m *GameStateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameStateRequest.Unmarshal(m, b)
}
func (m *GameStateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameStateRequest.Marshal(b, m, deterministic)
}
func (m *GameStateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameStateRequest.Merge(m, src)
}
func (m *GameStateRequest) XXX_Size() int {
	return xxx_messageInfo_GameStateRequest.Size(m)
}
func (m *GameStateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GameStateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GameStateRequest proto.InternalMessageInfo

func (m *GameStateRequest) GetSourceAccount() string {
	if m != nil {
		return m.SourceAccount
	}
	return ""
}

func (m *GameStateRequest) GetLastTimestamp() int64 {
	if m != nil {
		return m.LastTimestamp
	}
	return 0
}

type GameStats struct {
	TotalFlowersPlanted     int64    `protobuf:"varint,1,opt,name=total_flowers_planted,json=totalFlowersPlanted,proto3" json:"total_flowers_planted,omitempty"`
	FlowersPlantedByAccount int64    `protobuf:"varint,2,opt,name=flowers_planted_by_account,json=flowersPlantedByAccount,proto3" json:"flowers_planted_by_account,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-" datastore:"-"`
	XXX_unrecognized        []byte   `json:"-" datastore:"-"`
	XXX_sizecache           int32    `json:"-" datastore:"-"`
}

func (m *GameStats) Reset()         { *m = GameStats{} }
func (m *GameStats) String() string { return proto.CompactTextString(m) }
func (*GameStats) ProtoMessage()    {}
func (*GameStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0a023b8fcd10370, []int{5}
}

func (m *GameStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameStats.Unmarshal(m, b)
}
func (m *GameStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameStats.Marshal(b, m, deterministic)
}
func (m *GameStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameStats.Merge(m, src)
}
func (m *GameStats) XXX_Size() int {
	return xxx_messageInfo_GameStats.Size(m)
}
func (m *GameStats) XXX_DiscardUnknown() {
	xxx_messageInfo_GameStats.DiscardUnknown(m)
}

var xxx_messageInfo_GameStats proto.InternalMessageInfo

func (m *GameStats) GetTotalFlowersPlanted() int64 {
	if m != nil {
		return m.TotalFlowersPlanted
	}
	return 0
}

func (m *GameStats) GetFlowersPlantedByAccount() int64 {
	if m != nil {
		return m.FlowersPlantedByAccount
	}
	return 0
}

func init() {
	proto.RegisterType((*PlantedFlowers)(nil), "protobuf.PlantedFlowers")
	proto.RegisterType((*PlantedFlowers_Planted)(nil), "protobuf.PlantedFlowers.Planted")
	proto.RegisterType((*InteractionRequest)(nil), "protobuf.InteractionRequest")
	proto.RegisterType((*InteractionReply)(nil), "protobuf.InteractionReply")
	proto.RegisterType((*GameTileRequest)(nil), "protobuf.GameTileRequest")
	proto.RegisterType((*GameStateRequest)(nil), "protobuf.GameStateRequest")
	proto.RegisterType((*GameStats)(nil), "protobuf.GameStats")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GameClient is the client API for Game service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GameClient interface {
	GetGameTileByFlower(ctx context.Context, in *SingleInt64, opts ...grpc.CallOption) (*GameTile, error)
	SetGameTile(ctx context.Context, in *GameTileRequest, opts ...grpc.CallOption) (*GameTile, error)
	AddGameTileContent(ctx context.Context, in *GameTileRequest, opts ...grpc.CallOption) (*GameTile, error)
	GetGameState(ctx context.Context, in *GameStateRequest, opts ...grpc.CallOption) (*GameState, error)
	GetBreedingPartnersForFlower(ctx context.Context, in *SingleInt64, opts ...grpc.CallOption) (*RepeatedInt64, error)
	GetGameStats(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*GameStats, error)
	Interact(ctx context.Context, in *InteractionRequest, opts ...grpc.CallOption) (*InteractionReply, error)
	GetPlantedFlowersByAccount(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*PlantedFlowers, error)
	GetInventoryForAccount(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*Inventory, error)
	CraftItem(ctx context.Context, in *ItemTypeRequest, opts ...grpc.CallOption) (*Inventory, error)
}

type gameClient struct {
	cc *grpc.ClientConn
}

func NewGameClient(cc *grpc.ClientConn) GameClient {
	return &gameClient{cc}
}

func (c *gameClient) GetGameTileByFlower(ctx context.Context, in *SingleInt64, opts ...grpc.CallOption) (*GameTile, error) {
	out := new(GameTile)
	err := c.cc.Invoke(ctx, "/protobuf.Game/GetGameTileByFlower", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gameClient) SetGameTile(ctx context.Context, in *GameTileRequest, opts ...grpc.CallOption) (*GameTile, error) {
	out := new(GameTile)
	err := c.cc.Invoke(ctx, "/protobuf.Game/SetGameTile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gameClient) AddGameTileContent(ctx context.Context, in *GameTileRequest, opts ...grpc.CallOption) (*GameTile, error) {
	out := new(GameTile)
	err := c.cc.Invoke(ctx, "/protobuf.Game/AddGameTileContent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gameClient) GetGameState(ctx context.Context, in *GameStateRequest, opts ...grpc.CallOption) (*GameState, error) {
	out := new(GameState)
	err := c.cc.Invoke(ctx, "/protobuf.Game/GetGameState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gameClient) GetBreedingPartnersForFlower(ctx context.Context, in *SingleInt64, opts ...grpc.CallOption) (*RepeatedInt64, error) {
	out := new(RepeatedInt64)
	err := c.cc.Invoke(ctx, "/protobuf.Game/GetBreedingPartnersForFlower", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gameClient) GetGameStats(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*GameStats, error) {
	out := new(GameStats)
	err := c.cc.Invoke(ctx, "/protobuf.Game/GetGameStats", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gameClient) Interact(ctx context.Context, in *InteractionRequest, opts ...grpc.CallOption) (*InteractionReply, error) {
	out := new(InteractionReply)
	err := c.cc.Invoke(ctx, "/protobuf.Game/Interact", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gameClient) GetPlantedFlowersByAccount(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*PlantedFlowers, error) {
	out := new(PlantedFlowers)
	err := c.cc.Invoke(ctx, "/protobuf.Game/GetPlantedFlowersByAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gameClient) GetInventoryForAccount(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*Inventory, error) {
	out := new(Inventory)
	err := c.cc.Invoke(ctx, "/protobuf.Game/GetInventoryForAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gameClient) CraftItem(ctx context.Context, in *ItemTypeRequest, opts ...grpc.CallOption) (*Inventory, error) {
	out := new(Inventory)
	err := c.cc.Invoke(ctx, "/protobuf.Game/CraftItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GameServer is the server API for Game service.
type GameServer interface {
	GetGameTileByFlower(context.Context, *SingleInt64) (*GameTile, error)
	SetGameTile(context.Context, *GameTileRequest) (*GameTile, error)
	AddGameTileContent(context.Context, *GameTileRequest) (*GameTile, error)
	GetGameState(context.Context, *GameStateRequest) (*GameState, error)
	GetBreedingPartnersForFlower(context.Context, *SingleInt64) (*RepeatedInt64, error)
	GetGameStats(context.Context, *EmptyRequest) (*GameStats, error)
	Interact(context.Context, *InteractionRequest) (*InteractionReply, error)
	GetPlantedFlowersByAccount(context.Context, *EmptyRequest) (*PlantedFlowers, error)
	GetInventoryForAccount(context.Context, *EmptyRequest) (*Inventory, error)
	CraftItem(context.Context, *ItemTypeRequest) (*Inventory, error)
}

func RegisterGameServer(s *grpc.Server, srv GameServer) {
	s.RegisterService(&_Game_serviceDesc, srv)
}

func _Game_GetGameTileByFlower_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SingleInt64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameServer).GetGameTileByFlower(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.Game/GetGameTileByFlower",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameServer).GetGameTileByFlower(ctx, req.(*SingleInt64))
	}
	return interceptor(ctx, in, info, handler)
}

func _Game_SetGameTile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GameTileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameServer).SetGameTile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.Game/SetGameTile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameServer).SetGameTile(ctx, req.(*GameTileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Game_AddGameTileContent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GameTileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameServer).AddGameTileContent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.Game/AddGameTileContent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameServer).AddGameTileContent(ctx, req.(*GameTileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Game_GetGameState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GameStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameServer).GetGameState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.Game/GetGameState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameServer).GetGameState(ctx, req.(*GameStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Game_GetBreedingPartnersForFlower_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SingleInt64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameServer).GetBreedingPartnersForFlower(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.Game/GetBreedingPartnersForFlower",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameServer).GetBreedingPartnersForFlower(ctx, req.(*SingleInt64))
	}
	return interceptor(ctx, in, info, handler)
}

func _Game_GetGameStats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameServer).GetGameStats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.Game/GetGameStats",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameServer).GetGameStats(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Game_Interact_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InteractionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameServer).Interact(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.Game/Interact",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameServer).Interact(ctx, req.(*InteractionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Game_GetPlantedFlowersByAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameServer).GetPlantedFlowersByAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.Game/GetPlantedFlowersByAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameServer).GetPlantedFlowersByAccount(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Game_GetInventoryForAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameServer).GetInventoryForAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.Game/GetInventoryForAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameServer).GetInventoryForAccount(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Game_CraftItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ItemTypeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameServer).CraftItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.Game/CraftItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameServer).CraftItem(ctx, req.(*ItemTypeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Game_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protobuf.Game",
	HandlerType: (*GameServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetGameTileByFlower",
			Handler:    _Game_GetGameTileByFlower_Handler,
		},
		{
			MethodName: "SetGameTile",
			Handler:    _Game_SetGameTile_Handler,
		},
		{
			MethodName: "AddGameTileContent",
			Handler:    _Game_AddGameTileContent_Handler,
		},
		{
			MethodName: "GetGameState",
			Handler:    _Game_GetGameState_Handler,
		},
		{
			MethodName: "GetBreedingPartnersForFlower",
			Handler:    _Game_GetBreedingPartnersForFlower_Handler,
		},
		{
			MethodName: "GetGameStats",
			Handler:    _Game_GetGameStats_Handler,
		},
		{
			MethodName: "Interact",
			Handler:    _Game_Interact_Handler,
		},
		{
			MethodName: "GetPlantedFlowersByAccount",
			Handler:    _Game_GetPlantedFlowersByAccount_Handler,
		},
		{
			MethodName: "GetInventoryForAccount",
			Handler:    _Game_GetInventoryForAccount_Handler,
		},
		{
			MethodName: "CraftItem",
			Handler:    _Game_CraftItem_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protobuf/gameservice.proto",
}

func init() { proto.RegisterFile("protobuf/gameservice.proto", fileDescriptor_f0a023b8fcd10370) }

var fileDescriptor_f0a023b8fcd10370 = []byte{
	// 682 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0xcd, 0x6a, 0xdb, 0x58,
	0x14, 0xb6, 0x62, 0x27, 0xb1, 0x8f, 0xf3, 0xc7, 0x35, 0x89, 0x35, 0xc2, 0xc3, 0x18, 0x41, 0x20,
	0x30, 0xe0, 0x80, 0x67, 0xe8, 0xa2, 0xa5, 0x85, 0x38, 0x89, 0x8d, 0x77, 0x41, 0xc9, 0x22, 0x5d,
	0xa9, 0x8a, 0x7c, 0x6c, 0x04, 0x92, 0xae, 0x72, 0x75, 0x94, 0x5a, 0xd0, 0x65, 0x9f, 0xa5, 0xaf,
	0xd2, 0xd7, 0x2a, 0xba, 0x57, 0xb2, 0xac, 0x26, 0x4e, 0xc9, 0x4e, 0xf7, 0x3b, 0x3f, 0xdf, 0x77,
	0x7e, 0x74, 0xc0, 0x88, 0x04, 0x27, 0xfe, 0x90, 0xcc, 0xcf, 0x17, 0x4e, 0x80, 0x31, 0x8a, 0x27,
	0xcf, 0xc5, 0x81, 0x04, 0x59, 0xb3, 0xb0, 0x19, 0xbd, 0x05, 0xe7, 0x0b, 0x1f, 0xcf, 0x57, 0xce,
	0x31, 0x89, 0xc4, 0x25, 0xe5, 0x67, 0xf4, 0x4a, 0x58, 0xc5, 0xbb, 0x3c, 0x08, 0x78, 0x98, 0x5b,
	0xbb, 0x15, 0x06, 0xf2, 0xfc, 0x3c, 0xbd, 0xa1, 0x57, 0xa9, 0xc9, 0xa1, 0xe7, 0x16, 0x2f, 0x7c,
	0xc2, 0x90, 0xb8, 0x48, 0x95, 0xc5, 0xfc, 0xa1, 0xc1, 0xc1, 0x8d, 0xef, 0x84, 0x84, 0xb3, 0xb1,
	0xcf, 0xbf, 0xa2, 0x88, 0xd9, 0x7b, 0xd8, 0x8d, 0x14, 0xa2, 0x6b, 0xfd, 0xfa, 0x59, 0x7b, 0xd8,
	0x1f, 0x14, 0xe1, 0x83, 0xaa, 0x6b, 0xf1, 0xb4, 0x8a, 0x00, 0xe3, 0x1e, 0x76, 0x73, 0x8c, 0x1d,
	0x42, 0xdd, 0xb3, 0x67, 0x7a, 0xa3, 0xaf, 0x9d, 0x6d, 0x5b, 0x5b, 0xde, 0x15, 0xfb, 0x1b, 0xc0,
	0xe7, 0xae, 0x43, 0x1e, 0x0f, 0xed, 0xa5, 0xbe, 0x2d, 0xf1, 0x56, 0x81, 0xdc, 0x57, 0xcc, 0xa9,
	0xbe, 0x53, 0x35, 0x7f, 0x36, 0xbf, 0x6b, 0xc0, 0xa6, 0x21, 0xa1, 0x70, 0xdc, 0x0c, 0xb0, 0xf0,
	0x31, 0xc1, 0x98, 0xd8, 0x29, 0x1c, 0xc4, 0x3c, 0x11, 0x2e, 0xda, 0x8e, 0xeb, 0xf2, 0x24, 0x24,
	0x5d, 0xeb, 0x6b, 0x67, 0x2d, 0x6b, 0x5f, 0xa1, 0x17, 0x0a, 0x64, 0x7b, 0xa0, 0x2d, 0xf5, 0x2d,
	0x99, 0x53, 0x5b, 0x66, 0xaf, 0x54, 0xaf, 0xab, 0x57, 0xca, 0xfe, 0x85, 0xc6, 0xcc, 0x21, 0x47,
	0x2a, 0x6d, 0x0f, 0xbb, 0x03, 0x35, 0x9a, 0xb2, 0xe6, 0x5b, 0x39, 0x1a, 0x4b, 0x3a, 0x99, 0x29,
	0x1c, 0x55, 0x54, 0x44, 0x7e, 0xca, 0x7a, 0x00, 0x49, 0xe8, 0x3d, 0x26, 0x68, 0x67, 0x05, 0x2b,
	0xfe, 0xa6, 0x42, 0xa6, 0x57, 0x8c, 0x41, 0x43, 0x70, 0xdf, 0xcf, 0xd9, 0xe5, 0x37, 0xfb, 0x07,
	0xda, 0x02, 0xe3, 0xc4, 0x27, 0x9b, 0xd2, 0x08, 0xa5, 0x94, 0x96, 0x05, 0x0a, 0xba, 0x4b, 0x23,
	0xcc, 0x82, 0x08, 0x97, 0x24, 0x35, 0xb5, 0x2c, 0xf9, 0x6d, 0x7a, 0x70, 0x38, 0x71, 0x02, 0xbc,
	0xf3, 0x7c, 0x7c, 0x63, 0xf5, 0xe7, 0xd0, 0xca, 0x36, 0xc2, 0xce, 0x76, 0x45, 0xea, 0x68, 0x0f,
	0x59, 0x59, 0xdf, 0x2a, 0x69, 0x73, 0x91, 0x7f, 0x99, 0x5f, 0xe0, 0x28, 0x43, 0x6f, 0xb3, 0x15,
	0x7a, 0x23, 0xd7, 0x29, 0x1c, 0xf8, 0x4e, 0x4c, 0x36, 0x79, 0x72, 0x05, 0x83, 0x48, 0x12, 0xd6,
	0xad, 0xfd, 0x0c, 0xbd, 0x2b, 0x40, 0xf3, 0x1b, 0xb4, 0x0a, 0x86, 0x98, 0x0d, 0xe1, 0x98, 0x38,
	0x39, 0xbe, 0x3d, 0x57, 0x7b, 0x65, 0x97, 0xfb, 0x97, 0x85, 0x76, 0xa4, 0x31, 0xdf, 0xb9, 0x62,
	0xbd, 0x3e, 0x80, 0xf1, 0x9b, 0xb7, 0xfd, 0x90, 0xae, 0xa4, 0x29, 0xce, 0xee, 0xbc, 0x12, 0x33,
	0x4a, 0x73, 0x91, 0xc3, 0x9f, 0xdb, 0xd0, 0xc8, 0xe8, 0xd9, 0x08, 0x3a, 0x13, 0xa4, 0xa2, 0x03,
	0xa3, 0x54, 0x91, 0xb0, 0xe3, 0xb5, 0xe9, 0x7b, 0xe1, 0xc2, 0xc7, 0x69, 0x48, 0xef, 0xfe, 0x37,
	0x5e, 0x68, 0x9a, 0x59, 0x63, 0x9f, 0xa0, 0x7d, 0x5b, 0xe6, 0x60, 0x7f, 0xbd, 0xd0, 0x59, 0xd5,
	0xc2, 0x0d, 0xf1, 0xd7, 0xc0, 0x2e, 0x66, 0xb3, 0x02, 0xb8, 0xe4, 0x21, 0x61, 0x48, 0x6f, 0x4f,
	0x73, 0x01, 0x7b, 0x79, 0x29, 0x72, 0x6c, 0xcc, 0xa8, 0x7a, 0xad, 0xcf, 0xd2, 0xe8, 0xbc, 0x60,
	0x33, 0x6b, 0xec, 0x06, 0x7a, 0x13, 0xa4, 0x91, 0x40, 0x9c, 0x79, 0xe1, 0xe2, 0xc6, 0x11, 0x14,
	0xa2, 0x88, 0xc7, 0x5c, 0xbc, 0xde, 0x96, 0x6e, 0x09, 0x5b, 0x18, 0xa1, 0x43, 0x38, 0x93, 0x06,
	0xb3, 0xc6, 0x3e, 0x56, 0x44, 0xc5, 0xec, 0xa4, 0x74, 0xbd, 0x0e, 0x22, 0x4a, 0x5f, 0x11, 0x14,
	0x9b, 0x35, 0x36, 0x86, 0x66, 0xf1, 0xb7, 0xb1, 0x5e, 0xe9, 0xf2, 0xfc, 0x0e, 0x18, 0xc6, 0x06,
	0x6b, 0xe4, 0xa7, 0xb2, 0x30, 0x63, 0x82, 0x54, 0x3d, 0x5e, 0xab, 0x6d, 0xd8, 0x28, 0x4a, 0xdf,
	0x74, 0xf7, 0xcc, 0x1a, 0x9b, 0xc0, 0xc9, 0x04, 0x69, 0x5a, 0x5c, 0xd3, 0x31, 0x17, 0x7f, 0xca,
	0xd6, 0x59, 0x57, 0x98, 0x87, 0xc9, 0x0e, 0xb5, 0x2e, 0x85, 0x33, 0xa7, 0x29, 0x61, 0xb0, 0x3e,
	0xf4, 0xec, 0x9d, 0x9d, 0x82, 0xd7, 0xc3, 0x1f, 0x76, 0x24, 0xfa, 0xdf, 0xaf, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x06, 0xf5, 0xe8, 0x15, 0x77, 0x06, 0x00, 0x00,
}
